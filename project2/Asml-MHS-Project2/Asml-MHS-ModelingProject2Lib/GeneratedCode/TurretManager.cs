//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class TurretManager
{
	private int ThetaX
	{
		private get;
		private set;
	}

	private int ThetaY
	{
		private get;
		private set;
	}

	private static Asml-MHS-ModelingProject1::TurretManagement::TurretManager _instance;

	private bool DevicePresent;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> UP;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> RIGHT;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> LEFT;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> DOWN;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> FIRE;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> STOP;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> LED_OFF;

	private IEnumerable<Asml-MHS-ModelingProject1::System::Byte> LED_ON;

	private Asml-MHS-ModelingProject1::UsbLibrary::UsbHidPort USB;

	public static Asml-MHS-ModelingProject1::TurretManagement::TurretManager GetInstance()
	{
		throw new System.NotImplementedException();
	}

	private TurretManager()
	{
	}

	public virtual void IncreaseAttitude(int degrees)
	{
		throw new System.NotImplementedException();
	}

	public virtual void DecreaseAttitude(int degrees)
	{
		throw new System.NotImplementedException();
	}

	public virtual void IncreaseAzimuth(int degrees)
	{
		throw new System.NotImplementedException();
	}

	public virtual void DecreaseAzimuth(int degrees)
	{
		throw new System.NotImplementedException();
	}

	public virtual void ResetToOrigin()
	{
		throw new System.NotImplementedException();
	}

	public virtual void AssumeFiringPosition(int NewThetaX, int NewThetaY)
	{
		throw new System.NotImplementedException();
	}

	public virtual void ModifyAzimuth(int MovementValue)
	{
		throw new System.NotImplementedException();
	}

	public virtual void ModifyAttitude(int MovementValue)
	{
		throw new System.NotImplementedException();
	}

	public virtual IEnumerable<int> CurrentPosition()
	{
		throw new System.NotImplementedException();
	}

	public virtual void Fire()
	{
		throw new System.NotImplementedException();
	}

	private ~TurretManager()
	{
	}

	public virtual void Dispose()
	{
		throw new System.NotImplementedException();
	}

	protected virtual void Dispose(bool dispose_others)
	{
		throw new System.NotImplementedException();
	}

	private void command_Stop()
	{
		throw new System.NotImplementedException();
	}

	private void command_Right(int degrees)
	{
		throw new System.NotImplementedException();
	}

	private void command_Left(int degrees)
	{
		throw new System.NotImplementedException();
	}

	private void command_Up(int degrees)
	{
		throw new System.NotImplementedException();
	}

	private void command_Down(int degrees)
	{
		throw new System.NotImplementedException();
	}

	private void command_Fire()
	{
		throw new System.NotImplementedException();
	}

	private void command_switchLED(bool turnOn)
	{
		throw new System.NotImplementedException();
	}

	private void command_reset()
	{
		throw new System.NotImplementedException();
	}

	private void moveMissileLauncher(IEnumerable<Asml-MHS-ModelingProject1::System::Byte> Data, int interval)
	{
		throw new System.NotImplementedException();
	}

	private void SendUSBData(IEnumerable<Asml-MHS-ModelingProject1::System::Byte> Data)
	{
		throw new System.NotImplementedException();
	}

	private void USB_OnDataRecieved(Asml-MHS-ModelingProject1::System::Object sender, Asml-MHS-ModelingProject1::UsbLibrary::DataRecievedEventArgs args)
	{
		throw new System.NotImplementedException();
	}

	private void USB_OnSpecifiedDeviceArrived(Asml-MHS-ModelingProject1::System::Object sender, Asml-MHS-ModelingProject1::System::EventArgs e)
	{
		throw new System.NotImplementedException();
	}

	private void USB_OnSpecifiedDeviceRemoved(Asml-MHS-ModelingProject1::System::Object sender, Asml-MHS-ModelingProject1::System::EventArgs e)
	{
		throw new System.NotImplementedException();
	}

}

